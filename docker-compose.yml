---
version: '3'
services:
  db:
    container_name: ekylibre_db
    environment:
      - 'POSTGRES_PASSWORD=password'
      - 'POSTGRES_USER=postgres'
      - 'POSTGRES_DB=postgres'
      - 'TZ=Europe/Paris'
    build:
      context: ./docker/postgres
      dockerfile: Dockerfile
    volumes:
      - ./data:/var/lib/postgresql
  web:
    container_name: ekylibre_web
    restart: always
    image: nginx:1.15-alpine
    ports:
      - 80:80
    volumes:
      - ./public:/var/www/public
      - ./tmp:/tmp
      - ./docker/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - app
  app:
    container_name: ekylibre_app
    restart: always
    depends_on:
      - db
      - redis
    build:
      context: .
    environment:
      - 'BUNDLE_WITHOUT=test:development'
      - 'RAILS_ENV=production'
    command: [ "/opt/startup.sh" ]
    volumes:
      - ./public:/app/public
      - ./tmp:/tmp
  redis:
    container_name: ekylibre_redis
    restart: always
    image: redis:5.0-alpine
    volumes:
      - redis:/var/lib/redis/data
  sidekiq:
    container_name: ekylibre_sidekiq
    restart: always
    depends_on:
      - redis
    build: .
    command: bundle exec sidekiq -C config/sidekiq.yml
    volumes:
      - .:/app
    environment:
      - 'RAILS_ENV=production'
      - 'REDIS_URL=redis://redis'

volumes:
    redis:
