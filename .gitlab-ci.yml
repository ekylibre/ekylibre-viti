image: "ruby:2.4.0"
variables:
  POSTGRES_DB: ekylibre_test
  POSTGRES_USER: runner
  POSTGRES_PASSWORD: $password 
before_script: 
  - echo "--------------------------------------------------------------------------------"
  - echo "Dependencies install..."
  - curl -sL https://deb.nodesource.com/setup_8.x | bash -
  - apt-get update -qq
  - apt-get install -y nodejs
  - apt-get install -fy aptitude
  - aptitude update
  - apt-get install -y postgresql-9.6 postgresql-client-9.6 postgresql-contrib-9.6 postgresql-9.6-postgis-2.3
  - apt install -fy graphicsmagick tesseract-ocr tesseract-ocr-fra tesseract-ocr-eng tesseract-ocr-spa pdftk libreoffice poppler-utils poppler-data qt5-default libqt5webkit5-dev gstreamer1.0-x gstreamer1.0-tools gstreamer1.0-plugins-base libgeos-dev libproj-dev redis-server libicu-dev
  - apt-get install -y tzdata
  - aptitude remove -fy default-jre-headless openjdk-8-jre openjdk-8-jre-headless
  - aptitude install -fy openjdk-7-jdk libicu52
  - aptitude install -fy build-essential
  - aptitude install -fy yarn
  - service redis-server start
  - gem install bundler -v 1.14.6 --no-ri --no-rdoc
  - sed -i '1i local all all trust' /etc/postgresql/9.6/main/pg_hba.conf
  - /etc/init.d/postgresql stop
  - /etc/init.d/postgresql start 9.6
  - JAVA_HOME=/usr/lib/jvm/java-7-openjdk-amd64 RAILS_ENV=test bundle install --full-index --without development --jobs $(nproc) "${FLAGS[@]}"
  - psql -U 'postgres' -c "CREATE USER "$POSTGRES_USER" WITH PASSWORD '"$POSTGRES_PASSWORD"' CREATEDB;"
  - psql -U 'postgres' -c "ALTER USER "$POSTGRES_USER" WITH SUPERUSER;"
  - psql -U 'postgres' -c "CREATE DATABASE "$POSTGRES_DB" OWNER "$POSTGRES_USER";"
  - export PGPASSWORD=$POSTGRES_PASSWORD
  - psql -U $POSTGRES_USER ekylibre_test -c 'CREATE EXTENSION "uuid-ossp";'
  - psql -U $POSTGRES_USER ekylibre_test -c 'CREATE SCHEMA IF NOT EXISTS postgis;'
  - psql -U $POSTGRES_USER ekylibre_test -c 'CREATE EXTENSION IF NOT EXISTS postgis SCHEMA postgis;'
  - psql -U 'postgres' ekylibre_test -c "GRANT USAGE ON SCHEMA postgis TO "$POSTGRES_USER";"
  - psql -U 'postgres' ekylibre_test -c "GRANT ALL PRIVILEGES ON SCHEMA postgis TO "$POSTGRES_USER";"
  - psql -U 'postgres' ekylibre_test -c "GRANT ALL PRIVILEGES ON SCHEMA public TO "$POSTGRES_USER";"
  - psql -U $POSTGRES_USER ekylibre_test -c 'CREATE EXTENSION "unaccent" SCHEMA postgis;'
  - cp -f test/ci/database.yml config/database.yml
  - yarn
  - bundle exec rake db:migrate RAILS_ENV=test  

test_libs:
  stage: test
  script: "RAILS_ENV=test bundle exec rake test:libs"

test_models:
  stage: test
  script: "RAILS_ENV=test bundle exec rake test:models"

test_controllers:
  stage: test
  script: "RAILS_ENV=test bundle exec rake test:controllers"
