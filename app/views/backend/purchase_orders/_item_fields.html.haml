- item ||= f.object
- variant = Maybe(item.variant)
- f.object.currency = Preference[:currency]
- f.object.role = role if defined?(role)
%tbody.nested-fields.purchase-order-items.delivery-item{ data: { trade_item: "purchase", iceberg: true, display_items_form: @display_items_form } }
  %tr.item-display.hidden
    %td.act
      - if f.object.destroyable?
        = link_to_remove_association(content_tag(:i) + h(:destroy.tl), f, 'data-no-turbolink' => true, class: 'destroy remove remove-item')
    %td.act
      = link_to("#", class: 'edit edit-item', data: { edit: "item-form" }) do
        %i
        = :edit.tl
    %td.product-column
      %label{ data: { item_value: "input.order-variant" } }= f.object.variant ? f.object.variant.name : '??????'
    %td.quantity-column
      %label{ data: { item_value: "input.order-quantity" } }= f.object.variant ? f.object.variant.name : '??????'
      %label{ data: { item_value: "span.item-population-unit-name"}}= f.object.variant ? f.object.variant.unit_name : '#'
    %td.unit-amount-column.two-rows-column
      %span
        %label{ data: { item_value: "input.order-unit-amount" } }= f.object.variant ? f.object.variant.name : '??????'
        %label= Nomen::Currency.find(f.object.currency).symbol
      %label{class: "order-second-row-label"}= :discount_without_percent.tl
      %span
        %label{ data: { item_value: "input.order-discount-percentage" } }= f.object.variant ? f.object.variant.name : '??????'
        %label= "%"
    %td.total-column.two-rows-column
      %span
        %label{ class: 'amount-excluding-taxes', data: { item_value: "input.order-total" } }= f.object.variant ? f.object.variant.name : '??????'
        %label= Nomen::Currency.find(f.object.currency).symbol
      %label{ class: "order-second-row-label"}= :vat_rate.tl
      %label{ class: 'vat-rate', data: { item_value: "select.order-vat-total option:selected" } }= f.object.variant ? f.object.variant.name : '??????'

  %tr.nested-item-form
    %td.cell-form{colspan: 6}
      .item-form
        - classes = ""
        - classes = " merchandise" if f.object.role == 'merchandise'
        - classes = " service" if f.object.role == 'service'
        - classes = " fees" if f.object.role == 'fees'
        .form-block{ class: classes }
          = f.input :role, as: :hidden
    %td.form-field.merchandise
      - if f.object.role == 'merchandise'
        = f.referenced_association(:variant, label: :merchandise.tl, source: { scope: :purchaseables_stockables_or_depreciables }, input_html: {class: "order-variant", data: {variant_of_deal_item: {url: detail_backend_product_nature_variant_path("RECORD_ID", mode: :last_purchase_item)}, product_of_delivery_item: {url: backend_product_nature_variant_path("RECORD_ID", format: :json)}, required: true}}, required: true)
      - elsif f.object.role == 'service' || f.object.role == 'fees'
        = f.referenced_association(:variant, label: f.object.role.tl, source: { scope: :purchaseables_services }, input_html: { class: 'order-variant', data: { product_of_delivery_item: {url: backend_product_nature_variant_path("RECORD_ID", format: :json), scope: 'unit'}, required: true }}, required: true)
    %td.form-field.decimal
      = f.input :conditionning, wrapper: :append do
        = f.input_field :conditionning , class: "order-conditionning", data: { trade_component: 'conditionning' }
        %span.add-on.item-population-unit-name
          = variant.unit_name.or_else('#')
      %span.multiplicator X
      = f.input :conditionning_quantity, wrapper: :append do
        = f.input_field :conditionning_quantity , class: "order-conditionning-quantity", data: { trade_component: 'conditionning_quantity'}
    %td.form-field.decimal
      = f.input :quantity, wrapper: :append do
        = f.input_field :quantity, class: "order-quantity", placeholder: '0', size: 7, data: { trade_component: "quantity", required: true }
        %span.add-on.item-population-unit-name
          = variant.unit_name.or_else('#')
    %td.form-field
      = f.input :unit_pretax_amount, wrapper: :append do
        = f.input_field :unit_pretax_amount, class: "order-unit-amount middle-input", label: :unit_amount.tl, data: { trade_component: "unit_pretax_amount" }
        %span.add-on
          = Nomen::Currency.find(f.object.currency).symbol
    %td.form-field
      = f.input :reduction_percentage, wrapper: :append do
        = f.input_field :reduction_percentage, label: :discount_without_percent.tl, class: "order-discount-percentage", data: { trade_component: "reduction_percentage", required: true }
        %span.add-on
          = '%'
    %td.form-field.decimal
      = f.input :pretax_amount, wrapper: :append do
        = f.input_field :pretax_amount, class: "pta order-total middle-input", data: {trade_component: "pretax_amount", required: true}
        %span.add-on
          = Nomen::Currency.find(f.object.currency).symbol
    %td.form-field.decimal= f.input(:tax_id, label: :vat_rate.tl, collection: Tax.current.collect{|t| [t.short_label, t.id, {'data-rate' => ((100 + t.usable_amount)/100)}]}, selected: f.object.tax_id, input_html: { class: "order-vat-total", data: {value: 'rate', trade_component: "tax"}})
    -#%td.action= link_to_remove_association(content_tag(:i) + h(:destroy.ta), f, 'data-no-turbolink' => true, class: 'remove-item')

    %td.second-row
      .merchandise-current-stock
        %span.stock-label= :current_stock.tl
        %span.stock-value= f.object.decorate.merchandise_current_stock
        %span.stock-unit= f.object.decorate.merchandise_stock_unit
      .merchandise-stock-after-order
        %span.stock-label= :stock_after_order.tl
        %span.stock-value= f.object.decorate.merchandise_stock_after_order
        %span.stock-unit= f.object.decorate.merchandise_stock_unit

    %td.form-field.third-row
      .item-form
        - if Preference[:distribute_sales_and_purchases_on_activities] && current_user.can?(:read, :activities) && ActivityBudget.opened.any?
          = f.referenced_association(:activity_budget, new: false)
        = f.referenced_association(:project_budget)
        - if Preference[:distribute_sales_and_purchases_on_teams] && current_user.can?(:read, :teams)
          = f.referenced_association(:team)
        = f.referenced_association(:equipment, label: :equipment.tl, source: {scope: :tools}, input_html: {data: { remember: 'equipment'}})

    %td.buttons
      %button.btn{ data: { cancel: 'item-form' } }= :cancel.tl
      -# Last solution
      %button.btn.btn-primary{ data: { validate: 'item-form' } }= :validate.tl
      -# Test solution
      -# %button.btn.btn-primary{ 'v-on:click': 'validateItem' }= :validate.tl
